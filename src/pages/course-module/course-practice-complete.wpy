<style lang="less" scoped>
    @import "../../assets/style/theme";
    .module-course-complete-box {
        box-sizing: border-box;
        width: 100%;
        view {
            box-sizing: border-box;
        }
        .ui-content {
            height: 100%;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            flex-direction: column;
        }
        .ui-title {
            height: 64rpx;
            margin: 20rpx 0;
            font-size: 48rpx;
            font-weight: 700;
            color: @color-black;
            text {
                margin-right: 24rpx;
                font-size: 64rpx;
                color: @color-blue;
            }
        }
        .ui-banner {
            height: auto;
            margin: 40rpx 0;
            margin-top: 0;
            font-size: 48rpx;
            font-weight: 700;
            color: @color-black;
            image {
                width: 412rpx;
                margin: 32rpx auto;
            }
        }
        
        .ui-results-module {
            width: 670rpx;
            padding: 48rpx 40rpx;
            box-shadow: @box-shadow-hight;
            border-radius: @border-radius-32;
            .ui-skills-box {
                .cell-info {
                    font-size: 32rpx;
                    color: @color-black;
                    line-height: 36rpx;
                    .font-orange {
                        color: @color-orange-F9;
                    }
                }
                .cell-level {
                    font-size: 32rpx;
                    color: @color-black;
                    line-height: 36rpx;
                    text {
                        margin-left: 10rpx;
                        font-size: 30rpx;
                        color: @color-blue;
                    }
                }
                .ui-progress {
                    width: 100%;
                    height: 24rpx;
                    margin-top: 22rpx;
                    background-color: @background-color-F3;
                    border-radius: 24rpx;
                    position: relative;
                    overflow: hidden;
                    >view {
                        position: absolute;
                        left: 0;
                        top: 0;
                    }
                    .cell-line {
                        width: 100%;
                        height: 100%;
                        z-index: 3;
                        view {
                            width: 20%;
                            height: 100%;
                            border-left: 1px solid @background-white;
                        }
                        view:first-child {
                            border-left: 0;
                        }
                    }
                    .cell-beforPercent {
                        width: 0;
                        height: 100%;
                        background-color: @color-blue;
                        z-index: 2;
                        transition: width .2s;
                    }
                    .cell-upPercent {
                        width: 0;
                        height: 100%;
                        background-color: @background-tint-blue;
                        z-index: 1;
                        transition: width .4s;
                    }
                }
            }
            .ui-evaluation-box {
                width: 600rpx;
                height: 200rpx;
                padding: 32rpx 0 52rpx;
                margin-top: 30rpx;
                background-color: @background-color-F3;
                border-radius: 20rpx;
                .cell-title {
                    height: auto;
                    font-size: 32rpx;
                    color: @color-black;
                    line-height: 44rpx;
                    letter-spacing: 4rpx;
                }
                .ui-star {
                    width: 100%;
                    text-align: center;
                    text {
                        display: inline-block;
                        margin: 0 10rpx;
                        font-size: 48rpx;
                        color: @color-blue;
                    }
                }
            }
        }
        .ui-result-tips {
            width: 100%;
            font-size: 28rpx;
            color: @color-gray-8c;
            margin-top: 32rpx;
            line-height: 44rpx;
        }
        .ui-back-home {
            position: fixed;
            left: 0;
            right: 0;
            bottom: 16rpx;
            padding: 16rpx 0;
            .flex-center();
            &.is-iphonex {
                bottom: 68rpx;
            }
            button {
                width: 670rpx;
                height: 88rpx;
                font-size: 34rpx;
                color: @color-white;
                background: @background-blue;
                border-radius: @border-radius-16;
                font-weight: bold;
            }
        }

    }
</style>

<template>
    <jn-loading wx:if="{{!isLoaded}}">
    </jn-loading>
    <view class="module-course-complete-box" wx:if="{{isLoaded}}">
        <jn-header :title.sync="finishResultInfo.name" buttonIcon="back-close" buttonColor="#007AFF" :delta.sync="routerDelta"></jn-header>
        
        <view class="ui-container dir-top">
            <view class="ui-content">
                <view class="ui-banner">
                    <image mode="widthFix" src="http://image.runwise.cn/image/learn-complete.png"></image>
                    <view class="ui-title main-center"> 练习完成！ </view>
                </view>
                <view class="ui-results-module">
                    <view class="ui-skills-box" wx:if="{{!hasPractice}}">
                        <view class="main-justify">
                            <view class="cell-info">{{finishResultInfo.skillName}}：<text class="font-orange">{{finishResultInfo.skillTitle}}</text></view>
                        </view>
                        <view class="ui-progress">
                            <view class="cell-line box-mean">
                                <view></view>
                                <view></view>
                                <view></view>
                                <view></view>
                                <view></view>
                            </view>
                            <view class="cell-beforPercent" style="width: {{finishResultInfo.beforPercent}}%"></view>
                            <view class="cell-upPercent" style="width: {{finishResultInfo.upPercent}}%"></view>
                        </view>
                    </view>
                    <view class="ui-result-tips">{{resultsTips}}</view>
                </view>
                
                <view class="ui-back-home" :class="{'is-iphonex': isIphonex}" wx:if="{{!finishResultInfo.isDoneLearning}}">
                    <button class="main-center cross-center" @tap.stop="doNextPractice" wx:if="{{isFullMarks}}">挑战下一个场景</button>
                    <button class="main-center cross-center" @tap.stop="viewCurrentSence" wx:else>查看推荐微课</button>
                </view>
                <view class="ui-back-home" :class="{'is-iphonex': isIphonex}" wx:else>
                    <button class="main-center cross-center" @tap.stop="learnNextSence" wx:if="{{isFullMarks}}">学习下一门微课</button>
                    <button class="main-center cross-center" @tap.stop="reviewCurrentSence" wx:else>马上复习</button>
                </view>
            </view>
        </view>
    </view>
    <jn-score-modal></jn-score-modal>
    
</template>

<script>
    import wepy from 'wepy'
    import { getStore, connect } from 'wepy-redux'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import ScoreModal from '../../components/ScoreModal/index'
    import { fetch } from '../../api'
    import { navigateToLesson, redirectToLesson } from '../../utils'
    import _ from 'underscore';

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
        entrance(state) { //全局场景值
            return state.entrance
        }
    })
    export default class practiceComplete extends wepy.page {
        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'jn-score-modal': ScoreModal,
        }
        data = {
            headerHeigth: 68,
            isIphonex: /iphone x/i.test(wx.getSystemInfoSync().model),
            isLoaded: false,
            isEvaluation: false,
            routerDelta: 1,
            shareID: '',
            paramsInfo: {},
            finishResultInfo: {},
            starList: [1, 2, 3, 4, 5],
            skipRoutes: [
                'pages/course-module/course-cover',
                'pages/course-module/course-learning',
                'pages/course-module/course-exercises',
                'pages/course-module/course-learn-complete',
                'pages/course-module/course-evaluation-complete',
                'pages/course-module/course-practice-complete',
                'pages/course-module/course-evaluation',
            ],
            isFullMarks:null,//是否满分
        }
        onLoad(params) {
            let self = this
            // 分享进来的
            if (1 === getCurrentPages().length) {
                wx.reLaunch({
                    url: '/pages/tabPages/course'
                })
                return
            }
            let { user: { token, platform }, cards: { requestFlag } } = getStore().getState()

            self.paramsInfo = params
            
            self.$apply()
            
            self.__originalRouter()
            self.__sendFinish()
            self.__sendFinishResults()
            // ga
            wepy.$instance.globalData.getLoadHuilder() // ga统计
        }
        computed = {
            resultsTips() {
                let result;
                if(!this.finishResultInfo.isDoneLearning) {
                    result = this.finishResultInfo.upPercent == 100 ? '太棒了！看来这个场景并没有难倒您， 快点挑战下一个场景吧！' : '加油！还有进步的空间， 马上学习相关微课提升自己的技能水平吧！' ;
                } else {
                    result = this.finishResultInfo.upPercent == 100 ? '太棒了！您已基本掌握了本技能， 马上继续学习其他微课吧！' : '加油！还有进步的空间， 马上复习微课提升自己的技能水平吧！' ;
                }
                return result
            }
        }
        onShow() {
            let self = this
        }
        
        watch = {
            routerDelta(newVal,oldVal) {
                console.log(newVal,oldVal)
            }
        }
        
        /**
         * 如果是第一次完成微课的，奖励即能币
         * @private
         */
        __sendFinish() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseId: self.paramsInfo.courseID,
                senceId: self.paramsInfo.senceID,
                teamID: self.paramsInfo.teamID,
                practiceId: self.paramsInfo.practiceId
            }
            fetch.sendPracticeFinish(postData).then(response => {
                
                if (response.isPlayBonusToast) {
                    self.$invoke('ScoreModal', {
                        flag: true,
                        title: response.title,
                        score: response.addBonus
                    })
                }
            }).catch(error => {
            })
        }
        /**
         * 获取当前完成微课的信息
         * @private
         */
        __sendFinishResults() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID
            }
            
            fetch.sendPracticeFinishResults(postData).then((response) => {
                // 本次分值比上一次高
                response.lastAllScore = !response.lastAllScore && response.lastAllScore != 0 ? response.currentAllScore : response.lastAllScore;
                if ( response.currentAllScore > response.lastAllScore) {
                    response.skillTitle = `${response.lastAllScore} → ${response.currentAllScore}`
                } else {
                    response.skillTitle = response.currentAllScore;
                }

                response.beforPercent = response.lastAllScore /(self.paramsInfo.totalScore - 0) * 100; // 上次的技能比
                response.upPercent = response.currentAllScore / (self.paramsInfo.totalScore - 0) * 100; // 创新高的技能比
                self.isFullMarks = response.upPercent == 100 ? true : false ; //是否满分
                console.log(self.isFullMarks)
                self.finishResultInfo = response;

                self.isLoaded = true
                self.$apply()
                wepy.$instance.globalData.getLoadHuilder({
                    pageTheme: self.finishResultInfo.skillName
                }) // ga统计
            }).catch(error => {
                self.isLoaded = true
                self.$apply()
            })
        }
        
        /**
         * 计算返回到微课入口页面
         * @private
         */
        __originalRouter() {
            let self = this
            let routers = getCurrentPages()
            let lenght = routers.length - 2
            
            _.find(routers, (data, index) => {
                let item = routers[lenght - index]
                if (item && -1 === _.indexOf(self.skipRoutes, item.route)) {
                    return data
                } else {
                    ++self.routerDelta
                    self.$apply()
                }
            })
            self.$apply()
        }
        methods = {
            doNextPractice() {// 挑战下一个场景
                let self = this
                wepy.$instance.globalData.getHuilder('微课练习完成页/挑战下一个场景', 'click', '')
                self.$navigate(`/pages/course-module/course-exercises`, {
                    courseID: self.finishResultInfo.nextCourseId,
                    senceID: self.finishResultInfo.nextSenceId,
                })
            },
            viewCurrentSence() {//查看推荐微课
                let self = this
                wepy.$instance.globalData.getHuilder('微课练习完成页/查看推荐微课', 'click', '')
                self.$navigate(`/pages/course-module/course-cover`, {
                    courseID:self.paramsInfo.courseID,
                    senceID:self.paramsInfo.senceID
                })
            },
            learnNextSence() {//学习下一门微课
                let self = this
                wepy.$instance.globalData.getHuilder('微课练习完成页/学习下一门微课', 'click', '')
                self.$navigate(`/pages/course-module/course-cover`, {
                    courseID: self.finishResultInfo.nextCourseId,
                    senceID: self.finishResultInfo.nextSenceId,
                })
            },
            reviewCurrentSence() {//马上复习
                let self = this
                wepy.$instance.globalData.getHuilder('微课练习完成页/马上复习', 'click', '')
                self.$navigate(`/pages/course-module/course-cover`, {
                    courseID:self.paramsInfo.courseID,
                    senceID:self.paramsInfo.senceID
                })
            }
        }
        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            }
        }
        onShareAppMessage(event) {
            let self = this
            let path = `/pages/course-module/course-details?id=${self.paramsInfo.courseID}&shareID=${self.shareID}`
            wepy.$instance.globalData.getHuilder('微课完成/分享', 'click', self.finishResultInfo.name)
            wepy.$instance.globalData.getReportFlow('share')
            if (self.shareID) {
                let postData = {
                    token: self.systemInfo.token,
                    courseID: self.paramsInfo.id,
                    shareID: self.shareID
                }
                // 保存shareID的信息
                fetch.saveShareID(postData).then((response) => {}).catch((error) => {})
            }
            return {
                title: self.finishResultInfo.shareCoverTitle ? self.finishResultInfo.shareCoverTitle : `${self.systemInfo.nickName} 邀请你一起学习《${self.finishResultInfo.courseName}》`,
                path: path,
                imageUrl: self.finishResultInfo.shareCoverImageUrl || self.finishResultInfo.image || ''
            }
        }
    }
</script>