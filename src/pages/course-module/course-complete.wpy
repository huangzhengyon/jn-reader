<style lang="less" scoped>
    @import "../../assets/style/theme";
    .module-course-complete-box {
        box-sizing: border-box;
        width: 100%;
        view {
            box-sizing: border-box;
        }
        .ui-content {
            height: 100%;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            flex-direction: column;
        }
        .ui-title {
            height: 64rpx;
            margin: 80rpx 0;
            font-size: 48rpx;
            font-weight: 700;
            color: @color-black;
            text {
                margin-right: 24rpx;
                font-size: 64rpx;
                color: @color-blue;
            }
        }
        .ui-banner {
            height: auto;
            margin: 40rpx 0;
            margin-top: 0;
            font-size: 48rpx;
            font-weight: 700;
            color: @color-black;
        }
        .ui-done-banner {
            height: auto;
            margin: 0;
            flex-wrap: wrap;
            image {
                width: 600rpx;
            }
            .ui-subtitle {
                color: @color-gray-95;
                font-size: 32rpx;
                margin: 40rpx 0;
            }
        }
        .ui-results-module {
            width: 670rpx;
            padding: 48rpx 40rpx;
            box-shadow: @box-shadow-hight;
            border-radius: @border-radius-16;
            .ui-skills-box {
                .cell-info {
                    font-size: 32rpx;
                    color: @color-black;
                    line-height: 36rpx;
                }
                .cell-level {
                    font-size: 32rpx;
                    color: @color-black;
                    line-height: 36rpx;
                    text {
                        margin-left: 10rpx;
                        font-size: 30rpx;
                        color: @color-blue;
                    }
                }
                .ui-progress {
                    width: 100%;
                    height: 24rpx;
                    margin-top: 22rpx;
                    background-color: @background-color-F3;
                    border-radius: 24rpx;
                    position: relative;
                    overflow: hidden;
                    >view {
                        position: absolute;
                        left: 0;
                        top: 0;
                    }
                    .cell-line {
                        width: 100%;
                        height: 100%;
                        z-index: 3;
                        view {
                            width: 20%;
                            height: 100%;
                            border-left: 1px solid @background-white;
                        }
                        view:first-child {
                            border-left: 0;
                        }
                    }
                    .cell-beforPercent {
                        width: 0;
                        height: 100%;
                        background-color: @color-blue;
                        z-index: 2;
                        transition: width .2s;
                    }
                    .cell-upPercent {
                        width: 0;
                        height: 100%;
                        background-color: @background-tint-blue;
                        z-index: 1;
                        transition: width .4s;
                    }
                }
            }
            .ui-evaluation-box {
                width: 600rpx;
                height: 200rpx;
                padding: 32rpx 0 52rpx;
                margin-top: 30rpx;
                background-color: @background-color-F3;
                border-radius: 20rpx;
                .cell-title {
                    height: auto;
                    font-size: 32rpx;
                    color: @color-black;
                    line-height: 44rpx;
                    letter-spacing: 4rpx;
                }
                .ui-star {
                    width: 100%;
                    text-align: center;
                    text {
                        display: inline-block;
                        margin: 0 10rpx;
                        font-size: 48rpx;
                        color: @color-blue;
                    }
                }
            }
        }
        .cell-hover {
            background-color: @background-blue-hover
        }
        .ui-giving {
            text-align: center;
            width: 670rpx;
            margin-top: 120rpx;
            padding-bottom: 80rpx;
            &.is-iphonex {padding-bottom: 114rpx;}
            .cell-title {
                font-size: 26rpx;
                color: @color-gray;
                line-height: 36rpx;
            }
            button {
                width: 100%;
                height: 100rpx;
                margin-top: 28rpx;
                background-color: @background-blue;
                font-size: 34rpx;
                font-weight: 700;
                color: @color-white;
                border-radius: @border-radius-20;
                text {
                    font-size: 50rpx;
                    font-weight: 400;
                    margin-right: 16rpx;
                }
            }
        }
        .ui-next-sence {
            padding-bottom: 80rpx;
            &.is-iphonex {
                padding-bottom: 114rpx
            }
            .cell-targe {
                width: 100%;
                padding-bottom: 10rpx;
                font-size: 26rpx;
                color: @color-gray;
                line-height: 36rpx;
                text-align: center;
            }
            .ui-sence {
                width: 686rpx;
                height: 156rpx;
                padding: 22rpx;
                background-color: @background-gray-F4;
                border-radius: @border-radius-20;
                margin: 0 auto;
                image {
                    width: 112rpx;
                    height: 112rpx;
                    border-radius: @border-radius-20;
                }
                button {
                    width: 114rpx;
                    height: 60rpx;
                    background-color: @background-blue;
                    font-size: 30rpx;
                    color: @color-white;
                    line-height: 60rpx;
                    border-radius: @border-radius-32;
                    text {
                        margin: 0 auto;
                    }
                }
                .ui-content {
                    width: 60%;
                    padding: 10rpx 0 10rpx 16rpx;
                    text {
                        display: block;
                        width: 90%;
                        text-overflow: ellipsis;
                        white-space: nowrap;
                        overflow: hidden;
                    }
                    text:nth-of-type(1) {
                        height: 44rpx;
                        font-size: 32rpx;
                        ;
                        color: @color-black;
                        line-height: 44rpx;
                    }
                    text:nth-of-type(2) {
                        height: 40rpx;
                        font-size: 26rpx;
                        ;
                        color: @color-gray;
                        line-height: 40rpx;
                    }
                }
            }
        }
        .ui-back-home {
            position: fixed;
            left: 0;
            right: 0;
            bottom: 40rpx;
            .flex-center();
            &.is-iphonex {
                padding-bottom: 114rpx;
            }
            button {
                width: 670rpx;
                height: 88rpx;
                font-size: 34rpx;
                color: @color-blue;
                background: @background-gray-F4;
                border-radius: @border-radius-16;
                font-weight: bold;
            }
        }
    }
</style>

<template>
    <jn-loading wx:if="{{!isLoaded}}">
    </jn-loading>
    <view class="module-course-complete-box" wx:if="{{isLoaded}}">
        <jn-header :title.sync="finishResultInfo.name" buttonIcon="back-close" buttonColor="#007AFF" :delta.sync="routerDelta"></jn-header>
        <view class="ui-container dir-top"  wx:if="{{!isReview}}">
            <view class="ui-content">
                <view class="ui-title main-center" wx:if="{{!isFromTodayListing}}">
                    <text class="icon-correctly"></text>微课完成
                </view>
                <view class="ui-done-banner main-center" wx:else>
                    <image mode="widthFix" src="http://wx-small.runwise.cn/image/done-listing.svg"></image>
                    <view class="ui-subtitle">明天再来学习吧</view>
                </view>
                <view class="ui-results-module">
                    <view class="ui-skills-box" wx:if="{{!hasPractice}}">
                        <view class="main-justify">
                            <view class="cell-info">{{finishResultInfo.skillName}}：{{finishResultInfo.skillTitle}}</view>
                            <navigator class="cell-level" hover-class="none" url="/pages/course-module/course-level-instructions" @tap.stop="getQuetion">{{finishResultInfo.skillGrand}}<text class="icon-question"></text></navigator>
                        </view>
                        <view class="ui-progress">
                            <view class="cell-line box-mean">
                                <view></view>
                                <view></view>
                                <view></view>
                                <view></view>
                                <view></view>
                            </view>
                            <view class="cell-beforPercent" style="width: {{finishResultInfo.beforPercent}}%"></view>
                            <view class="cell-upPercent" style="width: {{finishResultInfo.upPercent}}%"></view>
                        </view>
                    </view>
                    <view class="ui-evaluation-box dir-top main-justify">
                        <view class="cell-title main-center">{{finishResultInfo.senceStarIsCanTick ? '点评微课，领5个即能币' : '你已评价'}}</view>
                        <view class="ui-star">
                            <repeat for="{{starList}}" key="index" index="index" item="item">
                                <text class="{{ finishResultInfo.senceStar>=item ? 'icon-selete-star' : 'icon-not-star' }}" data-star="{{item}}" @tap.stop="getEvaluation"></text>
                            </repeat>
                        </view>
                    </view>
                </view>
                <view class="ui-giving" :class="{'is-iphonex': isIphonex}">
                    <view class="cell-title">每成功邀请一位新好友学习，可得5即能币</view>
                    <button class="main-center cross-center" hover-class="cell-hover" open-type="share"><text class="icon-share"></text>邀请好友</button>
                </view>
            </view>
            <view class="ui-next-sence" :class="{'is-iphonex': isIphonex}" wx:if="{{finishResultInfo.isShowNext}}">
                <view class="cell-targe">{{finishResultInfo.nextTipx}}</view>
                <view class="ui-sence flex cross-center" @tap.stop="getSumbit">
                    <image class="flex-box-0" mode="aspectFit" src="{{finishResultInfo.imageurl}}"></image>
                    <view class="ui-content flex-box-1 dir-top main-justify">
                        <text>{{finishResultInfo.nextSenceName}}</text>
                        <text>{{finishResultInfo.senceTarget}}</text>
                    </view>
                    <button class="flex-box-0" hover-class="cell-hover"><text>即学</text></button>
                </view>
            </view>
        </view>
        <view class="ui-container dir-top"  wx:else>
            <view class="ui-content">
                <view class="ui-banner">
                    <image mode="widthFix" src="http://wx-small.runwise.cn/image/review-banner.svg"></image>
                </view>
                <view class="ui-results-module">
                    <view class="ui-skills-box" wx:if="{{!hasPractice}}">
                        <view class="main-justify">
                            <view class="cell-info">{{finishResultInfo.skillName}}：{{finishResultInfo.skillTitle}}</view>
                            <navigator class="cell-level" hover-class="none" url="/pages/course-module/course-level-instructions" @tap.stop="getQuetion">{{finishResultInfo.skillGrand}}<text class="icon-question"></text></navigator>
                        </view>
                        <view class="ui-progress">
                            <view class="cell-line box-mean">
                                <view></view>
                                <view></view>
                                <view></view>
                                <view></view>
                                <view></view>
                            </view>
                            <view class="cell-beforPercent" style="width: {{finishResultInfo.beforPercent}}%"></view>
                            <view class="cell-upPercent" style="width: {{finishResultInfo.upPercent}}%"></view>
                        </view>
                    </view>
                </view>
                
                <view class="ui-back-home" :class="{'is-iphonex': isIphonex}">
                    <button class="main-center cross-center" @tap.stop="goBackHome">返回今日页</button>
                </view>
            </view>
        </view>
    </view>
    <jn-score-modal></jn-score-modal>
    
</template>

<script>
    import wepy from 'wepy'
    import {
        getStore,
        connect
    } from 'wepy-redux'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import ScoreModal from '../../components/ScoreModal/index'
    import {
        fetch
    } from '../../api'
    import {
        navigateToLesson,
        redirectToLesson,
        setStorageAsync
    } from '../../utils'
    import _ from 'underscore';

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
        entrance(state) { //全局场景值
            return state.entrance
        },
        currentCourseName(state) {
            return state.courses.currentName
        },
        currentSencesName(state) {
            return state.sences.currentName
        },
        requestFlag(state) {
            return state.cards.requestFlag
        }
    })
    export default class courseComplete extends wepy.page {
        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'jn-score-modal': ScoreModal,
        }
        data = {
            headerHeigth: 68,
            isIphonex: /unknown|iphone x/i.test(wx.getSystemInfoSync().model),
            isLoaded: false,
            isEvaluation: false,
            routerDelta: 1,
            shareID: '',
            paramsInfo: {},
            finishResultInfo: {},
            starList: [1, 2, 3, 4, 5],
            skipRoutes: [
                'pages/course-module/course-cover',
                'pages/course-module/course-cover',
                'pages/course-module/course-learning',
                'pages/course-module/course-exercises'
            ],
        }
        onLoad(params) {
            let self = this
            // 分享进来的
            if (1 === getCurrentPages().length) {
                wx.reLaunch({
                    url: '/pages/tabPages/course'
                })
                return
            }
            let {
                courseID,
                senceID,
                teamID,
                source,
                isReview,
                isFromTodayListing,
                noProgressBar
            } = params
            
            let {
                user: {
                    token,
                    platform
                },
                cards: {
                    requestFlag
                }
            } = getStore().getState()
            self.paramsInfo = {
                courseID,
                senceID,
                teamID,
                platform,
                requestFlag,
                source,
                isReview,
                isFromTodayListing,
                noProgressBar
            }
            self.$apply()
            
            self.__originalRouter()
            self.__sendFinish()
            
            self.__createShareID()
        }
        computed = {
            isReview() { //是否为回顾课程
                return this.paramsInfo.isReview == 'true' ? true : false
            },
            isFromTodayListing() { //是否从学习清单进来
                return this.paramsInfo.isFromTodayListing == 'true' ? true : false
            },
            hasPractice() {
                return this.paramsInfo.noProgressBar == 'true' ? true : false
            }
        }
        onShow() {
            let self = this
            self.__sendFinishResults()
        }
        watch = {
            routerDelta(newValue,oldValue) {
                console.log(newValue,oldValue)
            }
        }
        /**
         * 获取普通分享ID
         */
        __createShareID() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID
            }
            fetch.createShareID(postData).then((response) => {
                self.shareID = response.shareID
            })
        }
        /**
         * 如果是第一次完成微课的，奖励即能币
         * @private
         */
        __sendFinish() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID,
                requestFlag: self.paramsInfo.requestFlag,
                teamID: self.paramsInfo.teamID,
                source: self.paramsInfo.source || ''
            }
            fetch.sendFinish(postData).then(response => {
                
                if (response.isPlayBonusToast) {
                    self.$invoke('ScoreModal', {
                        flag: true,
                        title: response.title,
                        score: response.addBonus
                    })
                }
            }).catch(error => {
            })
        }
        /**
         * 获取当前完成微课的信息
         * @private
         */
        __sendFinishResults() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID,
                requestFlag: self.paramsInfo.requestFlag,
                teamID: self.paramsInfo.teamID,
                source: self.paramsInfo.source ? self.paramsInfo.source : ''
            }
            
            fetch.sendFinishResults(postData).then((response) => {
                
                // 本次分值比上一次高
                if (response.skillUpScore > response.skillBaseScore) {
                    response.skillTitle = `${response.skillBaseScore} → ${response.skillUpScore}`
                } else {
                    response.skillTitle = response.skillBaseScore
                }
                response.beforPercent = response.skillBaseScore * 10 // 上次的技能比
                response.upPercent = response.skillUpScore * 10 // 创新高的技能比
                self.finishResultInfo = response

                self.isLoaded = true
                self.$apply()
                wepy.$instance.globalData.getLoadHuilder({
                    pageTheme: self.finishResultInfo.skillName
                }) // ga统计
                wx.reportAnalytics('finishsence', {
                    role: self.systemInfo.role,
                    nickname: self.systemInfo.nickName,
                    coursename: self.currentCourseName,
                    sencename: self.currentSencesName,
                    channel: self.entrance.mappers[self.entrance.scenceID]
                })
            }).catch(error => {
                self.isLoaded = true
                self.$apply()
            })
        }
        /**
         * 是否已经评价过了
         * @private
         */
        __EvaluationFinish() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID,
                requestFlag: self.paramsInfo.requestFlag,
                teamID: self.paramsInfo.teamID
            }
            fetch.sendFinishResults(postData).then((response) => {
                self.finishResultInfo.senceStarIsCanTick = response.senceStarIsCanTick
                self.$apply()
            }).catch(error => {
                
            })
        }
        /**
         * 计算返回到微课入口页面
         * @private
         */
        __originalRouter() {
            let self = this
            let routers = getCurrentPages()
            let lenght = routers.length - 2
            
            _.find(routers, (data, index) => {
                let item = routers[lenght - index]
                if (item && -1 === _.indexOf(self.skipRoutes, item.route)) {
                    return data
                } else {
                    ++self.routerDelta
                    self.$apply()
                }
            })
            self.$apply()
        }
        methods = {
            goBackHome() { //返回今日页
                wepy.$instance.globalData.getHuilder('微课回顾/微课完成/返回今日页', 'click', '')
                wepy.switchTab({
                    url: '/pages/tabPages/home'
                })
            },
            getQuetion() {
                wepy.$instance.globalData.getHuilder('微课完成/技能等级介绍', 'click', '')
            },
            /**
             *
             * @param event
             */
            getEvaluation(event) {
                let self = this
                let {
                    currentTarget: {
                        dataset: {
                            star
                        }
                    }
                } = event
                wepy.$instance.globalData.getHuilder('微课完成/点评', 'click', self.finishResultInfo.name)
                if (self.finishResultInfo.senceStar > 0) {
                    wx.reportAnalytics('lessonfinish_evaluate_click', {
                        username: self.systemInfo.nickName,
                        channel: self.entrance.mappers[self.entrance.scenceID],
                        role: self.systemInfo.role
                    })
                }
                if (self.finishResultInfo.senceStarIsCanTick) {
                    self.isEvaluation = true
                    self.finishResultInfo.senceStar = star
                    self.$apply()
                }
                self.$navigate('/pages/course-module/course-evaluation', {
                    courseID: self.paramsInfo.courseID,
                    senceID: self.paramsInfo.senceID,
                    teamID: self.paramsInfo.teamID,
                    score: self.finishResultInfo.senceStarIsCanTick ? star : 0,
                    skillName: self.finishResultInfo.skillName,
                    senceStarIsCanTick: self.finishResultInfo.senceStarIsCanTick
                })
            },
            /**
             * 继续下一课
             */
            getSumbit() {
                let self = this
                let finishResultInfo = self.finishResultInfo
                if (!finishResultInfo.isShowNext) {
                    return
                }
                let params = {
                    courseID: finishResultInfo.nextCourseID,
                    senceID: finishResultInfo.nextSenceID,
                    teamID: self.paramsInfo.teamID,
                    source: 'sencefinish'
                }
                wepy.$instance.globalData.getHuilder('微课完成/继续学习', 'click', self.finishResultInfo.nextSenceName)
                redirectToLesson(params)
            }
        }
        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            }
        }
        onShareAppMessage(event) {
            let self = this
            let path = `/pages/course-module/course-details?id=${self.paramsInfo.courseID}&shareID=${self.shareID}`
            wepy.$instance.globalData.getHuilder('微课完成/分享', 'click', self.finishResultInfo.name)
            wepy.$instance.globalData.getReportFlow('share')
            if (self.shareID) {
                let postData = {
                    token: self.systemInfo.token,
                    courseID: self.paramsInfo.id,
                    shareID: self.shareID
                }
                // 保存shareID的信息
                fetch.saveShareID(postData).then((response) => {}).catch((error) => {})
            }
            return {
                title: self.finishResultInfo.shareCoverTitle ? self.finishResultInfo.shareCoverTitle : `${self.systemInfo.nickName} 邀请你一起学习《${self.finishResultInfo.courseName}》`,
                path: path,
                imageUrl: self.finishResultInfo.shareCoverImageUrl || self.finishResultInfo.image || ''
            }
        }
    }
</script>
